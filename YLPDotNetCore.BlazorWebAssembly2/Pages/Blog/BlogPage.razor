@page "/blog"

@inject HttpClient httpClient
<PageTitle>Blog List</PageTitle>

<h3>Blog List</h3>
<div class="m-5 p-5 border border-1">
    <NavLink href="blog/create" class="btn btn-outline-primary">New</NavLink>
</div>

<table class="table table-responsive table-striped">
    <thead>
        <tr>
            <th>Actions</th>
            <th>Blog Id</th>
            <th>Blog Title </th>
            <th>Blog Author</th>
            <th>Blog Content</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in _blogs)
        {
            <tr>
                <td>
                    <a href="/Blog/Edit/@item.BlogId" class="btn btn-sm btn-success" >Edit</a>
                    <button class="btn btn-sm btn-outline-danger btn-delete" data-blog-id="@item.BlogId">Delete</button>
                </td>
                <td>@item.BlogId</td>
                <td>@item.BlogTitle</td>
                <td>@item.BlogAuthor</td>
                <td>@item.BlogContent</td>
            </tr>
        }
    </tbody>
</table>


@code {
    private List<BlogModel> _blogs = new List<BlogModel>();

    protected override async Task OnInitializedAsync()
    {
        // return base.OnInitializedAsync();
        var response = await httpClient.GetAsync("/api/Blog");
        if (response.IsSuccessStatusCode)
        {
            var jsonStr = await response.Content.ReadAsStringAsync();
            // Console.WriteLine(jsonStr);
            _blogs = JsonConvert.DeserializeObject<List<BlogModel>>(jsonStr)!;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // return base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {

        }
    }

}
